/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./src/app/lib/actions.ts":
/*!********************************!*\
  !*** ./src/app/lib/actions.ts ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// \"use server\"\n// import { OptionalUser } from \"./types\"\n// import { nanoid } from \"nanoid\"\n// import bcrypt from 'bcrypt'\n// import { addUser, getUserById, getUserByLogin, updateUserLogin } from \"./api\"\n// import { redirect } from \"next/navigation\"\n// import { createAuthSession, destroySession, verifyAuth } from \"./auth\"\n// export const handleSignup = async (prev: unknown, data: FormData) => {\n//     if (!data.get('name') || !data.get('surname')) {\n//         return {\n//             message: \"Please fill all the fields\"\n//         }\n//     }\n//     const found = getUserByLogin(data.get('login') as string)\n//     if (found) {\n//         return {\n//             message: \"Login is busy!\"\n//         }\n//     }\n//     const user: OptionalUser = {\n//         id: nanoid(),\n//         name: data.get('name') as string,\n//         surname: data.get('surname') as string,\n//         login: data.get('login') as string,\n//     }\n//     user.password = await bcrypt.hash(data.get('password') as string, 10)\n//     console.log(addUser(user))\n//     redirect(\"/login\")\n// }\n// export const handleLogin = async (prev: unknown, data: FormData) => {\n//     if (!data.get('login') || !data.get('password')) {\n//         return {\n//             message: \"please fill all the fields\"\n//         }\n//     }\n//     let login = data.get('login') as string\n//     let password = data.get('password') as string\n//     let user = getUserByLogin(login)\n//     if (!user) {\n//         return {\n//             message: \"the login is incorrect!\"\n//         }\n//     }\n//     let match = await bcrypt.compare(password, user.password)\n//     if (!match) {\n//         return {\n//             message: \"password is wrong!!\"\n//         }\n//     }\n//     await createAuthSession(user.id)\n//     redirect(\"/profile\")\n// }\n// export const handleLogout = async () => {\n//     await destroySession()\n//     redirect(\"/login\")\n// }\n// export const handleNewLogin = async (prev: unknown, data: FormData) => {\n//     const newLogin=data.get(\"login\") as string\n//     const currentPass=data.get(\"password\") as string\n//     if(!newLogin || !currentPass){\n//         return{\n//             message:\"Please fill all the fields.\"\n//         }\n//     }\n//     const verified=await verifyAuth()\n//     if(!verified.user){\n//         return{\n//             message:\"User is not verified.\"\n//         }\n//     }\n//     const user=await getUserById(verified.user.id)\n//     if(!user){\n//         return{\n//             message:\"User not found.\"\n//         }\n//     } \n//     const foundLogin = await getUserByLogin(user.login)\n//     if (foundLogin) {\n//         return {\n//             message: \"Login is busy.\"\n//         }\n//     }\n//     const match=await bcrypt.compare(currentPass,user.password)\n//     if(!match){\n//         return {\n//             message:\"Password is wrong.\"\n//         }\n//     }\n//     const foundNewLogin=await getUserByLogin(newLogin)\n//     if(foundNewLogin){\n//         return{\n//             message:\"This login is used.\"\n//         }\n//     }\n//     await updateUserLogin(newLogin,user.id)\n//     await destroySession()\n//     redirect(\"/login\")\n//     }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbGliL2FjdGlvbnMudHMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZTtBQUVmLHlDQUF5QztBQUN6QyxrQ0FBa0M7QUFDbEMsOEJBQThCO0FBQzlCLGdGQUFnRjtBQUNoRiw2Q0FBNkM7QUFDN0MseUVBQXlFO0FBRXpFLHlFQUF5RTtBQUV6RSx1REFBdUQ7QUFDdkQsbUJBQW1CO0FBQ25CLG9EQUFvRDtBQUNwRCxZQUFZO0FBQ1osUUFBUTtBQUVSLGdFQUFnRTtBQUNoRSxtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CLHdDQUF3QztBQUN4QyxZQUFZO0FBQ1osUUFBUTtBQUVSLG1DQUFtQztBQUNuQyx3QkFBd0I7QUFDeEIsNENBQTRDO0FBQzVDLGtEQUFrRDtBQUNsRCw4Q0FBOEM7QUFDOUMsUUFBUTtBQUVSLDRFQUE0RTtBQUM1RSxpQ0FBaUM7QUFDakMseUJBQXlCO0FBRXpCLElBQUk7QUFFSix3RUFBd0U7QUFDeEUseURBQXlEO0FBQ3pELG1CQUFtQjtBQUNuQixvREFBb0Q7QUFDcEQsWUFBWTtBQUNaLFFBQVE7QUFFUiw4Q0FBOEM7QUFDOUMsb0RBQW9EO0FBRXBELHVDQUF1QztBQUN2QyxtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CLGlEQUFpRDtBQUNqRCxZQUFZO0FBQ1osUUFBUTtBQUNSLGdFQUFnRTtBQUNoRSxvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CLDZDQUE2QztBQUM3QyxZQUFZO0FBQ1osUUFBUTtBQUVSLHVDQUF1QztBQUN2QywyQkFBMkI7QUFDM0IsSUFBSTtBQUVKLDRDQUE0QztBQUM1Qyw2QkFBNkI7QUFDN0IseUJBQXlCO0FBQ3pCLElBQUk7QUFHSiwyRUFBMkU7QUFFM0UsaURBQWlEO0FBQ2pELHVEQUF1RDtBQUV2RCxxQ0FBcUM7QUFDckMsa0JBQWtCO0FBQ2xCLG9EQUFvRDtBQUNwRCxZQUFZO0FBQ1osUUFBUTtBQUdSLHdDQUF3QztBQUN4QywwQkFBMEI7QUFDMUIsa0JBQWtCO0FBQ2xCLDhDQUE4QztBQUM5QyxZQUFZO0FBQ1osUUFBUTtBQUdSLHFEQUFxRDtBQUNyRCxpQkFBaUI7QUFDakIsa0JBQWtCO0FBQ2xCLHdDQUF3QztBQUN4QyxZQUFZO0FBQ1osU0FBUztBQUVULDBEQUEwRDtBQUMxRCx3QkFBd0I7QUFDeEIsbUJBQW1CO0FBQ25CLHdDQUF3QztBQUN4QyxZQUFZO0FBQ1osUUFBUTtBQUVSLGtFQUFrRTtBQUNsRSxrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CLDJDQUEyQztBQUMzQyxZQUFZO0FBQ1osUUFBUTtBQUVSLHlEQUF5RDtBQUN6RCx5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCLDRDQUE0QztBQUM1QyxZQUFZO0FBQ1osUUFBUTtBQUVSLDhDQUE4QztBQUM5Qyw2QkFBNkI7QUFDN0IseUJBQXlCO0FBSXpCLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9saWIvYWN0aW9ucy50cz8yMmI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFwidXNlIHNlcnZlclwiXG5cbi8vIGltcG9ydCB7IE9wdGlvbmFsVXNlciB9IGZyb20gXCIuL3R5cGVzXCJcbi8vIGltcG9ydCB7IG5hbm9pZCB9IGZyb20gXCJuYW5vaWRcIlxuLy8gaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnXG4vLyBpbXBvcnQgeyBhZGRVc2VyLCBnZXRVc2VyQnlJZCwgZ2V0VXNlckJ5TG9naW4sIHVwZGF0ZVVzZXJMb2dpbiB9IGZyb20gXCIuL2FwaVwiXG4vLyBpbXBvcnQgeyByZWRpcmVjdCB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIlxuLy8gaW1wb3J0IHsgY3JlYXRlQXV0aFNlc3Npb24sIGRlc3Ryb3lTZXNzaW9uLCB2ZXJpZnlBdXRoIH0gZnJvbSBcIi4vYXV0aFwiXG5cbi8vIGV4cG9ydCBjb25zdCBoYW5kbGVTaWdudXAgPSBhc3luYyAocHJldjogdW5rbm93biwgZGF0YTogRm9ybURhdGEpID0+IHtcblxuLy8gICAgIGlmICghZGF0YS5nZXQoJ25hbWUnKSB8fCAhZGF0YS5nZXQoJ3N1cm5hbWUnKSkge1xuLy8gICAgICAgICByZXR1cm4ge1xuLy8gICAgICAgICAgICAgbWVzc2FnZTogXCJQbGVhc2UgZmlsbCBhbGwgdGhlIGZpZWxkc1wiXG4vLyAgICAgICAgIH1cbi8vICAgICB9XG5cbi8vICAgICBjb25zdCBmb3VuZCA9IGdldFVzZXJCeUxvZ2luKGRhdGEuZ2V0KCdsb2dpbicpIGFzIHN0cmluZylcbi8vICAgICBpZiAoZm91bmQpIHtcbi8vICAgICAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgICAgIG1lc3NhZ2U6IFwiTG9naW4gaXMgYnVzeSFcIlxuLy8gICAgICAgICB9XG4vLyAgICAgfVxuXG4vLyAgICAgY29uc3QgdXNlcjogT3B0aW9uYWxVc2VyID0ge1xuLy8gICAgICAgICBpZDogbmFub2lkKCksXG4vLyAgICAgICAgIG5hbWU6IGRhdGEuZ2V0KCduYW1lJykgYXMgc3RyaW5nLFxuLy8gICAgICAgICBzdXJuYW1lOiBkYXRhLmdldCgnc3VybmFtZScpIGFzIHN0cmluZyxcbi8vICAgICAgICAgbG9naW46IGRhdGEuZ2V0KCdsb2dpbicpIGFzIHN0cmluZyxcbi8vICAgICB9XG5cbi8vICAgICB1c2VyLnBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2goZGF0YS5nZXQoJ3Bhc3N3b3JkJykgYXMgc3RyaW5nLCAxMClcbi8vICAgICBjb25zb2xlLmxvZyhhZGRVc2VyKHVzZXIpKVxuLy8gICAgIHJlZGlyZWN0KFwiL2xvZ2luXCIpXG5cbi8vIH1cblxuLy8gZXhwb3J0IGNvbnN0IGhhbmRsZUxvZ2luID0gYXN5bmMgKHByZXY6IHVua25vd24sIGRhdGE6IEZvcm1EYXRhKSA9PiB7XG4vLyAgICAgaWYgKCFkYXRhLmdldCgnbG9naW4nKSB8fCAhZGF0YS5nZXQoJ3Bhc3N3b3JkJykpIHtcbi8vICAgICAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgICAgIG1lc3NhZ2U6IFwicGxlYXNlIGZpbGwgYWxsIHRoZSBmaWVsZHNcIlxuLy8gICAgICAgICB9XG4vLyAgICAgfVxuXG4vLyAgICAgbGV0IGxvZ2luID0gZGF0YS5nZXQoJ2xvZ2luJykgYXMgc3RyaW5nXG4vLyAgICAgbGV0IHBhc3N3b3JkID0gZGF0YS5nZXQoJ3Bhc3N3b3JkJykgYXMgc3RyaW5nXG5cbi8vICAgICBsZXQgdXNlciA9IGdldFVzZXJCeUxvZ2luKGxvZ2luKVxuLy8gICAgIGlmICghdXNlcikge1xuLy8gICAgICAgICByZXR1cm4ge1xuLy8gICAgICAgICAgICAgbWVzc2FnZTogXCJ0aGUgbG9naW4gaXMgaW5jb3JyZWN0IVwiXG4vLyAgICAgICAgIH1cbi8vICAgICB9XG4vLyAgICAgbGV0IG1hdGNoID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpXG4vLyAgICAgaWYgKCFtYXRjaCkge1xuLy8gICAgICAgICByZXR1cm4ge1xuLy8gICAgICAgICAgICAgbWVzc2FnZTogXCJwYXNzd29yZCBpcyB3cm9uZyEhXCJcbi8vICAgICAgICAgfVxuLy8gICAgIH1cblxuLy8gICAgIGF3YWl0IGNyZWF0ZUF1dGhTZXNzaW9uKHVzZXIuaWQpXG4vLyAgICAgcmVkaXJlY3QoXCIvcHJvZmlsZVwiKVxuLy8gfVxuXG4vLyBleHBvcnQgY29uc3QgaGFuZGxlTG9nb3V0ID0gYXN5bmMgKCkgPT4ge1xuLy8gICAgIGF3YWl0IGRlc3Ryb3lTZXNzaW9uKClcbi8vICAgICByZWRpcmVjdChcIi9sb2dpblwiKVxuLy8gfVxuXG5cbi8vIGV4cG9ydCBjb25zdCBoYW5kbGVOZXdMb2dpbiA9IGFzeW5jIChwcmV2OiB1bmtub3duLCBkYXRhOiBGb3JtRGF0YSkgPT4ge1xuXG4vLyAgICAgY29uc3QgbmV3TG9naW49ZGF0YS5nZXQoXCJsb2dpblwiKSBhcyBzdHJpbmdcbi8vICAgICBjb25zdCBjdXJyZW50UGFzcz1kYXRhLmdldChcInBhc3N3b3JkXCIpIGFzIHN0cmluZ1xuXG4vLyAgICAgaWYoIW5ld0xvZ2luIHx8ICFjdXJyZW50UGFzcyl7XG4vLyAgICAgICAgIHJldHVybntcbi8vICAgICAgICAgICAgIG1lc3NhZ2U6XCJQbGVhc2UgZmlsbCBhbGwgdGhlIGZpZWxkcy5cIlxuLy8gICAgICAgICB9XG4vLyAgICAgfVxuXG5cbi8vICAgICBjb25zdCB2ZXJpZmllZD1hd2FpdCB2ZXJpZnlBdXRoKClcbi8vICAgICBpZighdmVyaWZpZWQudXNlcil7XG4vLyAgICAgICAgIHJldHVybntcbi8vICAgICAgICAgICAgIG1lc3NhZ2U6XCJVc2VyIGlzIG5vdCB2ZXJpZmllZC5cIlxuLy8gICAgICAgICB9XG4vLyAgICAgfVxuXG5cbi8vICAgICBjb25zdCB1c2VyPWF3YWl0IGdldFVzZXJCeUlkKHZlcmlmaWVkLnVzZXIuaWQpXG4vLyAgICAgaWYoIXVzZXIpe1xuLy8gICAgICAgICByZXR1cm57XG4vLyAgICAgICAgICAgICBtZXNzYWdlOlwiVXNlciBub3QgZm91bmQuXCJcbi8vICAgICAgICAgfVxuLy8gICAgIH0gXG5cbi8vICAgICBjb25zdCBmb3VuZExvZ2luID0gYXdhaXQgZ2V0VXNlckJ5TG9naW4odXNlci5sb2dpbilcbi8vICAgICBpZiAoZm91bmRMb2dpbikge1xuLy8gICAgICAgICByZXR1cm4ge1xuLy8gICAgICAgICAgICAgbWVzc2FnZTogXCJMb2dpbiBpcyBidXN5LlwiXG4vLyAgICAgICAgIH1cbi8vICAgICB9XG5cbi8vICAgICBjb25zdCBtYXRjaD1hd2FpdCBiY3J5cHQuY29tcGFyZShjdXJyZW50UGFzcyx1c2VyLnBhc3N3b3JkKVxuLy8gICAgIGlmKCFtYXRjaCl7XG4vLyAgICAgICAgIHJldHVybiB7XG4vLyAgICAgICAgICAgICBtZXNzYWdlOlwiUGFzc3dvcmQgaXMgd3JvbmcuXCJcbi8vICAgICAgICAgfVxuLy8gICAgIH1cblxuLy8gICAgIGNvbnN0IGZvdW5kTmV3TG9naW49YXdhaXQgZ2V0VXNlckJ5TG9naW4obmV3TG9naW4pXG4vLyAgICAgaWYoZm91bmROZXdMb2dpbil7XG4vLyAgICAgICAgIHJldHVybntcbi8vICAgICAgICAgICAgIG1lc3NhZ2U6XCJUaGlzIGxvZ2luIGlzIHVzZWQuXCJcbi8vICAgICAgICAgfVxuLy8gICAgIH1cblxuLy8gICAgIGF3YWl0IHVwZGF0ZVVzZXJMb2dpbihuZXdMb2dpbix1c2VyLmlkKVxuLy8gICAgIGF3YWl0IGRlc3Ryb3lTZXNzaW9uKClcbi8vICAgICByZWRpcmVjdChcIi9sb2dpblwiKVxuICAgXG5cblxuLy8gICAgIH1cblxuXG5cbiAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/lib/actions.ts\n"));

/***/ })

});